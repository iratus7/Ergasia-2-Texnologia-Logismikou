import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import javax.swing.*;


public class ReturnsForm extends javax.swing.JFrame {

   /**
     * Το ταμείο
     */
    private Register register;
    /**
     * Η Αρχική φόρμα
     */
    private MainStoreForm parentForm;

    /**
     * Η πώληση από την οποία θα επιστρέψουμε κάποια προϊόντα
     */
    private Sale s;

    /**
     * Πίνακας από JLabel που δημιουργείται δυναμικά και εμφανίζει τα στοιχεία
     * από τις γραμμές πώλησης της πώλησης από την οποία θα επιστρέψουμε προϊόντα
     */
    JLabel[][] jLabels;
     /**
     * Πίνακας από JTextField που δημιουργείται δυναμικά και αντιστοχεί ένα για κάθε
     * γραμμή πώλησης της πώλησης από την οποία θα επιστρέψουμε προϊόντα
     */
    JTextField[] jTextFields;

    /** Creates new form ReturnsForm */
    public ReturnsForm(MainStoreForm parent, Register register) {
        parentForm = parent;
        this.register = register;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    private void initComponents() {

        jLabel1 = new JLabel();
        jTextField1 = new JTextField();
        jButton1 = new JButton();
        jPanel1 = new JPanel();
        jButton2 = new JButton();
        jScrollPane1 = new JScrollPane();
        jTextArea1 = new JTextArea();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        jLabel8 = new JLabel();
        jFormattedTextField1 = new JFormattedTextField(new java.util.Date());
        jButton3 = new JButton();
        jComboBox1 = new JComboBox();
        jLabel2 = new JLabel();

        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Κωδ. Πώλησης");

        jTextField1.setHorizontalAlignment(JTextField.TRAILING);
        jTextField1.setText("0");

        jButton1.setText("Ανάκτηση στοιχείων");
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new Color(0, 255, 255));

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 473, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 166, Short.MAX_VALUE)
        );

        jButton2.setText("Επιστροφή Προϊόντων");
        jButton2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel5.setText("Αιτιολόγηση");

        jLabel6.setText("Ημερομηνια");

        jLabel7.setText("Αριθμός Συναλλαγής");

        jLabel8.setHorizontalAlignment(SwingConstants.TRAILING);
        jLabel8.setText(""+(Store.getTransactionId()));

        jFormattedTextField1.setEditable(false);

        jButton3.setBackground(new Color(255, 0, 0));
        jButton3.setText("Ακύρωση");
        jButton3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new DefaultComboBoxModel(new String[] { "1. Χαλασμένο", "2. Ανοιγμένη Συσκευασία", "3. Περασμένη Ημερομηνία Λήξης", "4. Εκτός Προδιαγραφών", "5. Άλλο" }));

        jLabel2.setText("Κατηγορία Προβλήματος");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                        .addGap(27, 27, 27)
                        .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 73, GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextField1, GroupLayout.PREFERRED_SIZE, 109, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE))
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox1, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                            .addComponent(jButton3, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jFormattedTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }

    /**
     * Όταν πατηθεί το πλήκτρο Ανάκτηση στοιχείων επικοινωνεί με το κατάστημα
     * και ανακτά την αντίστοιχη πώληση. Για κάθε γραμμή πώλησης της ανακτημένης
     * πώλησης δημιουργούνται 2 JLabel, ένα με τα στοιχεία του προϊοντος και
     * ένα με την ποσότητα που έχει πωληθεί, και ένα JTextField για να μπορεί
     * να εισάγει ο χρήστης την ποσότητα επιστροφής.
     *
     */
    private void jButton1ActionPerformed(ActionEvent evt) {
        try {
            //Αν δεν βρεθεί συναλλαγή πώλησης θα επιστραφεί null
            int s_id = Integer.parseInt(jTextField1.getText());
            s = register.retreiveSale(s_id);
            jPanel1.removeAll();
            // Στην κλήση της getEntries αν το s είναι null θα βγεί το αντίστοιχο μήνυμα
            // από τον χειριστή της εξαίρεσης.
            ArrayList<LineItem> items = s.getEntries();
            // Δημιουργούμε του δύο πίνακες βάση του αριθμού των γραμμών πώλησης
            jLabels = new JLabel[items.size()][2];
            jTextFields = new JTextField[items.size()];
            //Ορίζουμε την αντίστοιχη διάταξη
            jPanel1.setLayout(new GridLayout(items.size() + 1, 3));
            //Προσθέτουμε 3 ετικέτες για επικεφαλίδες
            jPanel1.add(new JLabel("Προϊόν"));
            JLabel l1 = new JLabel("Ποσότητα");
            l1.setHorizontalAlignment(JLabel.CENTER);
            jPanel1.add(l1);
            jPanel1.add(new JLabel("Επιστρεφόμενη Ποσότητα"));

            // Για κάθε γραμμή πώλησης της ανακτημένης πώλησης δημιουργούνται
            // 2 JLabel, ένα με τα στοιχεία του προϊοντος και ένα με την
            // ποσότητα που έχει πωληθεί, και ένα JTextField για να μπορεί
            // να εισάγει ο χρήστης την ποσότητα επιστροφής.
            for (int i = 0; i < items.size(); i++) {
                jLabels[i][0] = new JLabel(items.get(i).getProduct().toShortString());
                jPanel1.add(jLabels[i][0]);
                jLabels[i][1] = new JLabel("" + items.get(i).getQuantity());
                jLabels[i][1].setHorizontalAlignment(JLabel.CENTER);
                jPanel1.add(jLabels[i][1]);
                jTextFields[i] = new JTextField("0", 3);
                jTextFields[i].setHorizontalAlignment(JTextField.CENTER);
                jPanel1.add(jTextFields[i]);
            }
        } catch (Exception x) {
            JOptionPane.showMessageDialog(rootPane,
                    "Δεν βρέθηκε συναλλαγή πώλησης με αυτό τον κωδικό");
            return;
        } finally {
            //Ζητάμε από το jPanel να επανασχεδιαστεί
            jPanel1.revalidate();
            //Ζητάμε από την φόρμα να αλλάξει μέγεθος ώστε να χωρά όλα
            // τα νέα στοιχεία που προστέθηκαν
            this.pack();
        }
    }

    /**
     * Όταν πατηθεί το κουμπί Επιστροφή Προϊόντων δημιουργείται ένα αντικείμενο
     * Επιστροφής και ελέγχεται αν ο χρήστης έχει επιλέξει να επιστρέψει κάποια
     * από τα προϊόντα της πώλησης που έχει ανακτηθεί, τα οποία προσθέτει ως
     * γραμμές επιστροφής αφού πρώτα γίνουν οι απαραίτητοι έλεγχοι.
     *
     */
    
    private void jButton2ActionPerformed(ActionEvent evt) {

        // Δημιουργείται το αντικείμενο επιστροφής
        register.makeNewReturn();

        // Για κάθε πεδίο ελέγχουμε αν ο χρήστης αλλαξε την αρχική τιμή 0
        for (int i = 0; i < jTextFields.length; i++) {
            try {
                //Μετατρέπουμε το κείμενο σε αριθμό
                int retQuantity = Integer.parseInt(jTextFields[i].getText());

                // Αν οι ποσότητα είναι θετική
                if (retQuantity > 0) {
                    //Διαβάζουμε και την ποσότητα που είχε αρχικά πωληθεί
                    int soldQuantity = Integer.parseInt(jLabels[i][1].getText());
                    //Αν ο χρήστης προσπαθεί να επιστρέψει περισσότερα απ' ότι αγόρασε,
                    //βγάζουμε σχετικό μήνυμα και επιστρέφουμε
                    if (retQuantity > soldQuantity) {
                        JOptionPane.showMessageDialog(rootPane,
                                "Δεν μπορείτε να επιστρέψετε περισσότερα απ' ότι αγοράσατε");
                        return;
                    }
                    // Για έχουμε φτάσει σε αυτό το σημείο όλα πήγαν καλά για το τρέχον προϊόν
                    // και ανακτούμε την αντίστοιχη γραμμή  πώλησης από την πώληση
                    SalesLineItem l1 = (SalesLineItem) s.getEntries().get(i);
                    // Δημιουργούμε μία γραμμή επιστροφής από τα αντίστοιχα πεδία
                    // και την προσθέτουμε στην τρέχουσα επιστροφή
                    register.enterItem(new ReturnLineItem(l1,
                            new FaultSpecification(jComboBox1.getSelectedIndex(), jTextArea1.getText()), retQuantity));
                }
            } catch (NumberFormatException ex) {
                // Σε περίπτωση σφάλματος εμφανίζουμε το αντίστοιχο μήνυμα
                // και ακυρώνεται η διαδικασία
                JOptionPane.showMessageDialog(rootPane,
                        "Παρακαλώ να βάλετε ως ποσότητα από 1 εώς το πλήθος των αγαθών που αγοράσατε");
                return;
            }
       }

       // Αν έχουμε φτάσει ως εδώ όλα πήγαν καλά και η επιστροφή μπορεί να ολοκληρωθεί

       // Ζητάμε να ολοκληρωθεί η πώληση και πέρνουμε την απόδειξη
       Receipt r = register.endSale();
       //Ελέγχουμε αν επεστράφηκε απόδειξη και ότι η απόδειξη είναι νόμιμη
       if (r!=null && r.isLegal()){
        System.out.println(r);
        //Ενεργοποιούμε την αρχική φόρμα
        parentForm.setEnabled(true);
        //Κλείνουμε την φόρμα επιστροφης
        dispose();
       }
       else //Σε αντίθετη περίπτωση εμφανίζουμε μήνυμα λάθους
           JOptionPane.showMessageDialog(rootPane, "Δεν μπόρεσε να ολοκληρωθεί " +
                    "η συναλλαγή\n Ελέγξετε τα επιλεγμένα προϊόντα " +
                    "και τις ποσότητες"
                    );
    }

    /**
     * Επιστροφή στην αρχική φόρμα αν πατηθεί ακύρωση
     *
     */
    private void jButton3ActionPerformed(ActionEvent evt) {
            //Ενεργοποίησε την αρχική φόρμα
            parentForm.setEnabled(true);
            //Απελευθέρωσε την τρέχουσα φόρμα
            dispose();
    }

    /**
     * Επιστροφή στην αρχική φόρμα αν πατηθεί το Χ για το κλείσιμο της φόρμας
     *
     */
    private void formWindowClosing(WindowEvent evt) {
           //Ενεργοποίησε την αρχική φόρμα
            parentForm.setEnabled(true);
            //Απελευθέρωσε την τρέχουσα φόρμα
            dispose();
    }

    
    private JButton jButton1, jButton2, jButton3;
    private JComboBox jComboBox1;
    private JFormattedTextField jFormattedTextField1;
    private JLabel jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8;
    private JPanel jPanel1;
    private JScrollPane jScrollPane1;
    private JTextArea jTextArea1;
    private JTextField jTextField1;
    

}
